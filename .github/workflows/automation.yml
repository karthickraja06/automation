name: Daily Automation

on:
  schedule:
    - cron: "0 6 * * *"  # Runs daily at 6 AM UTC (Change as needed)
  workflow_dispatch:  # Allows manual trigger

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Set Up Environment Variables
        run: |
          echo "SHEET_ID=${{ secrets.SHEET_ID }}" >> $GITHUB_ENV
          echo "GEMINI_API=${{ secrets.GEMINI_API }}" >> $GITHUB_ENV

      - name: Decode and Store Service Account Files
        run: |
          mkdir -p secrets
          echo '${{ secrets.SERVICE_FILE }}' | base64 --decode > secrets/SERVICE_FILE.json
          echo '${{ secrets.TTS_SERVICE_FILE }}' | base64 --decode > secrets/TTS_SERVICE_FILE.json
          echo "SERVICE_FILE_PATH=secrets/SERVICE_FILE.json" >> $GITHUB_ENV
          echo "TTS_SERVICE_FILE_PATH=secrets/TTS_SERVICE_FILE.json" >> $GITHUB_ENV

      # ✅ Debug Step 1: Check if the secrets directory and files exist
      - name: Verify Decoded Files Exist
        run: ls -l secrets/

      # ✅ Debug Step 2: Print a few lines of the decoded JSON files (ensure they are not empty)
      - name: Print Service Account File (First 10 Lines)
        run: head -n 10 secrets/SERVICE_FILE.json

      # ✅ Debug Step 3: Ensure environment variables are correctly set
      - name: Check Environment Variables
        run: env | grep 'SHEET_ID\|SERVICE_FILE\|TTS_SERVICE_FILE'

      # ✅ Debug Step 4: Check if SERVICE_FILE_PATH is correctly referenced in Python
      - name: Verify Python ENV Variables
        run: |
          python -c "import os; print(f'SERVICE_FILE_PATH={os.getenv("SERVICE_FILE_PATH")}')"

      - name: Run Script
        run: python automation.py
      
      - name: Cleanup Secrets
        run: rm -rf secrets
      
